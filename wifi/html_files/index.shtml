<!DOCTYPE html>
<html>
  <head>
    <title>Max Verstappen</title>
    <style>
      body {
        font-family: "Helvetica", "Arial", sans-serif;
        background-color: #eeeeee;
      }

      .container {
        display: flex;
      }
      .left-column {
        flex: 2; /* Adjust the width of the left column as needed */
        padding: 10px;
        margin-right: 3rem;
      }
      .map {
        flex: 3; /* The map occupies 1/3 of the container width */
        border: 1px solid #ccc;
        padding: 0% 3rem 1rem 3rem;
        box-sizing: border-box;
      }
      .controls {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }
      .button {
        display: block;
        padding: 10px;
        text-align: center;
        background-color: #007bff;
        color: #fff;
        text-decoration: none;
        border-radius: 22px;
        cursor: pointer;
        margin-bottom: 10px; /* Add margin to create a gap between buttons */
      }
      .button:hover {
        background-color: #0044ff;
      }
      .data {
        margin-top: 10px;
      }
      .grid {
        display: grid;
        padding: 0% 3rem 1rem 3rem;
      }

      .grid-row {
        margin: 0;
        padding: 0;
      }

      .grid-cell {
        position: relative;
      }

      .grid-cell::before {
        content: "";
        display: block;
        padding-top: 100%;
      }

      .grid-cell-content {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 26px;
      }
    </style>
  </head>
  <body>
    <div style="text-align: center">
      <h1>&#x1F3CE; Welcome To Red Bull Racing &#x1F3CE;</h1>
    </div>
    <div class="container">
      <div class="left-column">
        <div class="controls">
          <h2 style="padding-bottom: 1rem">Led Controls:</h2>
          <a onclick="toggleLed(1)" class="button">ON LED</a>
          <a onclick="toggleLed(0)" class="button">OFF LED</a>
          <a href="/index.shtml" class="button">Refresh</a>
        </div>
        <div class="controls">
          <h2 style="padding-bottom: 1rem; padding-top: 1rem">
            Engine Controls:
          </h2>
          <a onclick="toggleEngine(1)" class="button">Start Car</a>
          <a onclick="toggleEngine(0)" class="button">Stop Car</a>
          <a href="/index.shtml" class="button">Refresh</a>
        </div>

        <div class="controls">
          <h2 style="padding-bottom: 1rem; padding-top: 1rem">
            Barcode Controls:
          </h2>
          <a onclick="toggleBarcode(1)" class="button">Reset Barcode</a>
          <a href="/index.shtml" class="button">Refresh</a>
        </div>
        <div class="data">
          <h2>SSI Data:</h2>
          <p id="car-status">
            Car Voltage:
            <!--#volt-->
          </p>
          <p id="temperature-status">
            Car Engine Temperature:
            <!--#temp-->
            C
          </p>
          <p id="led-status">
            Car is switched:
            <!--#led-->
          </p>
        </div>
      </div>
      <div class="map">
        <!-- Add your map image here -->
        <input
          type="hidden"
          id="max-width"
          name="max-width"
          value="<!--#width-->"
        />
        <input
          type="hidden"
          id="max-height"
          name="max-height"
          value="<!--#height-->"
        />
        <h2>Map&#x1F9C0;&#x1F42D;</h2>
        <hr />
        <div id="map-container">
          <div class="grid"></div>
          <p><u>Legend</u></p>
          <p>BC: Barcode location</p>
          <p>O: Obstacle location</p>

          <p><u>Barcode</u></p>
          <p>
            Value: <b id="bc-value"><!--#bc--></b>
          </p>
        </div>
        <!-- <div id="no-map" style="text-align:center">
          <h3>No map data!</h3>
        </div> -->
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const max_width = document.getElementById("max-width").value;
        const max_height = document.getElementById("max-height").value;
        var gridContainer = document.querySelector(".grid");
        gridContainer.style.gridTemplateColumns = `repeat(${max_width}, 1fr)`;

        const total_cells = max_height * max_width;
        let barcode_counter = 1;

        function makegrid(gridmap) {
          let json_grid_data = JSON.parse(gridmap.replace(/'/g, '"'));

          console.log(json_grid_data);
          var current_x;
          var current_y;
          var wall_details;

          json_grid_data.forEach(function (celldata) {
            var cell = document.createElement("div"); // Create a new div for each cell
            cell.className = "grid-cell"; // Assign class name to the cell
            cell.style.gridColumnStart = celldata.x + 1; // Set its location to the second column
            cell.style.gridRowStart = celldata.y + 1; // Set its location to the first row

            if (celldata.w[0] === 1) {
              cell.style.borderTop = "3px solid black";
            }
            if (celldata.w[1] === 1) {
              cell.style.borderBottom = "3px solid black";
            }
            if (celldata.w[2] === 1) {
              cell.style.borderRight = "3px solid black";
            }
            if (celldata.w[3] === 1) {
              cell.style.borderLeft = "3px solid black";
            }

            var content = document.createElement("div");
            content.className = "grid-cell-content"; // For barcode
            if (celldata.v === 2) {
              // Obstacle
              content.innerHTML = "O";
            } else if (celldata.v === 3) {
              // Barcode
              content.innerHTML = "BC";
              document.getElementById(`bc-value`).innerHTML = celldata.c;
            }

            cell.appendChild(content);

            gridContainer.appendChild(cell); // Append the cell to the grid container
          });
        }

        if ("<!--#grid1-->") {
          // document.getElementById("no-map").style.display='none';
          // document.getElementById("map-container").style.display='block';
          makegrid("<!--#grid1-->");
          makegrid("<!--#grid2-->");
          makegrid("<!--#grid3-->");
          makegrid("<!--#grid4-->");
          makegrid("<!--#grid5-->");
        } else {
          // document.getElementById("no-map").style.display='block';
          // document.getElementById("map-container").style.display='none';
        }
      });

      function toggleLed(status) {
        // Make an AJAX request to the server
        fetch(`/led.cgi?led=${status}`)
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.text();
          })
          .then((html) => {
            console.log("LED status changed.");
            // Update LED status
            document.getElementById(
              "led-status"
            ).innerHTML = `Car is switched: ${status ? "ON" : "OFF"}`;
          })
          .catch((error) => {
            console.error(
              "There has been a problem with your fetch operation:",
              error
            );
          });
      }

      function toggleBarcode(status) {
        // Make an AJAX request to the server
        fetch(`/barcode.cgi?barcode=${status}`)
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.text();
          })
          .then((html) => {
            console.log("Barcode status changed.");
          })
          .catch((error) => {
            console.error(
              "There has been a problem with your fetch operation:",
              error
            );
          });
      }

      function toggleEngine(status) {
        // Make an AJAX request to the server
        fetch(`/engine.cgi?engine=${status}`)
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.text();
          })
          .then((html) => {
            console.log("Engine status changed.");
          })
          .catch((error) => {
            console.error(
              "There has been a problem with your fetch operation:",
              error
            );
          });
      }
    </script>
  </body>
</html>
